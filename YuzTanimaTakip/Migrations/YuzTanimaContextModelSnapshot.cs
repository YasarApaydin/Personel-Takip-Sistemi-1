// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YuzTanimaTakip.Data;

#nullable disable

namespace YuzTanimaTakip.Migrations
{
    [DbContext(typeof(YuzTanimaContext))]
    partial class YuzTanimaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YuzTanimaTakip.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c76ac66e-11a9-4728-b8d2-1c188ac591e5"),
                            RoleId = new Guid("6bc5e969-6c00-4055-b396-cc4baab0c63a")
                        },
                        new
                        {
                            UserId = new Guid("2be8c118-5067-4cfe-be99-a811cdf6c8a5"),
                            RoleId = new Guid("e7df287e-c1c0-48b6-9c06-a125049f63ed")
                        },
                        new
                        {
                            UserId = new Guid("d56bb1d9-0b12-4d99-ab77-2a7d1a27a5d6"),
                            RoleId = new Guid("3d3241b4-c7bb-4111-ad9c-dab1dc407423")
                        });
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.CalisanKayitlari", b =>
                {
                    b.Property<Guid>("KayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CikisSaati")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GirisSaati")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("MolaSuresi")
                        .HasColumnType("time");

                    b.HasKey("KayitId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("CalisanKayitlaris");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.GecmisKayitlar", b =>
                {
                    b.Property<Guid>("GecmisKayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CikisZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GirisZamani")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("MolaSuresi")
                        .HasColumnType("time");

                    b.HasKey("GecmisKayitId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("GecmisKayitlars");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Kullanici", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KullaniciTurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciTurId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c76ac66e-11a9-4728-b8d2-1c188ac591e5"),
                            AccessFailedCount = 0,
                            Ad = "Ali",
                            AktifMi = true,
                            ConcurrencyStamp = "a0d34f1a-bcd6-4c91-ba89-5e435fae36c2",
                            Email = "emirhanyasar@gmail.com",
                            EmailConfirmed = false,
                            Foto = "profil_resmi.jpg",
                            KullaniciTurId = new Guid("3d3241b4-c7bb-4111-ad9c-dab1dc407423"),
                            LockoutEnabled = false,
                            NormalizedEmail = "EMIRHANYASAR@GMAIL.COM",
                            NormalizedUserName = "EMIRHANYASAR@GMAIL.COM",
                            OlusturulmaTarihi = new DateTime(2025, 3, 4, 22, 58, 34, 465, DateTimeKind.Utc).AddTicks(5699),
                            PasswordHash = "AQAAAAIAAYagAAAAEHDHQo4F3iu6T2p3p19UeMcOUY9AYKtFK+asBRKzq3x+8ih+xl4W5qz8UZq+Q2F/LQ==",
                            PhoneNumber = "+905415062981",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b94511ef-70a8-4bb9-9bf7-6f140525bef4",
                            Soyad = "Altunar",
                            TwoFactorEnabled = false,
                            UserName = "emirhanyasar@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2be8c118-5067-4cfe-be99-a811cdf6c8a5"),
                            AccessFailedCount = 0,
                            Ad = "Emirhan",
                            AktifMi = true,
                            ConcurrencyStamp = "fbcb2133-8ff5-4cd0-baa8-f2ce3712d01a",
                            Email = "apaydinyasar5@gmail.com",
                            EmailConfirmed = false,
                            Foto = "profil_resmi.jpg",
                            KullaniciTurId = new Guid("e7df287e-c1c0-48b6-9c06-a125049f63ed"),
                            LockoutEnabled = false,
                            NormalizedEmail = "APAYDINYASAR5@GMAIL.COM",
                            NormalizedUserName = "APAYDINYASAR5@GMAIL.COM",
                            OlusturulmaTarihi = new DateTime(2025, 3, 4, 22, 58, 34, 508, DateTimeKind.Utc).AddTicks(2551),
                            PasswordHash = "AQAAAAIAAYagAAAAEIuw0PHrFnnpUgPh5O6tUqrNNPGJ5ZYX8IH9tXONjCEFMh90sgaEZWyNiTvB8aJNTQ==",
                            PhoneNumber = "+905415062981",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5092ee31-4a8d-41c2-97ca-3fd8449dd40c",
                            Soyad = "Tanrıverdı",
                            TwoFactorEnabled = false,
                            UserName = "apaydinyasar5@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("d56bb1d9-0b12-4d99-ab77-2a7d1a27a5d6"),
                            AccessFailedCount = 0,
                            Ad = "Yaşar",
                            AktifMi = true,
                            ConcurrencyStamp = "0b256e08-0cd7-44eb-a53f-b018471da004",
                            Email = "apaydinyasar0@gmail.com",
                            EmailConfirmed = false,
                            Foto = "profil_resmi.jpg",
                            KullaniciTurId = new Guid("3d3241b4-c7bb-4111-ad9c-dab1dc407423"),
                            LockoutEnabled = false,
                            NormalizedEmail = "APAYDINYASAR0@GMAIL.COM",
                            NormalizedUserName = "APAYDINYASAR0@GMAIL.COM",
                            OlusturulmaTarihi = new DateTime(2025, 3, 4, 22, 58, 34, 549, DateTimeKind.Utc).AddTicks(7649),
                            PasswordHash = "AQAAAAIAAYagAAAAECMXBzruej3QEJ98Goy8cV61WaBoe4iKCQ4djaBVS4/qgvWu2aQUlatPcqheNPwenQ==",
                            PhoneNumber = "+905412345678",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e990ab6a-8d5d-4d05-9c30-5d21faed5012",
                            Soyad = "Apaydın",
                            TwoFactorEnabled = false,
                            UserName = "apaydinyasar0@gmail.com"
                        });
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.KullaniciTurleri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7df287e-c1c0-48b6-9c06-a125049f63ed"),
                            ConcurrencyStamp = "85fcc968-73d1-43a3-8b6b-c38d1526c6af",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("6bc5e969-6c00-4055-b396-cc4baab0c63a"),
                            ConcurrencyStamp = "f2e5659c-18f4-4b60-871f-8bd791607b58",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("3d3241b4-c7bb-4111-ad9c-dab1dc407423"),
                            ConcurrencyStamp = "b4d4e206-aa3d-4c1e-a963-d73b6c56474d",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.MesaiSaatleri", b =>
                {
                    b.Property<Guid>("MesaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("BaslangicSaati")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("BitisSaati")
                        .HasColumnType("time");

                    b.Property<DateOnly>("Gun")
                        .HasColumnType("date");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("ToplamCalismaSuresi")
                        .HasColumnType("time");

                    b.HasKey("MesaiId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("MesaiSaatleris");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.MolaTurleri", b =>
                {
                    b.Property<Guid>("MolaTurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MolaTurAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.HasKey("MolaTurId");

                    b.ToTable("MolaTurleris");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Molalar", b =>
                {
                    b.Property<Guid>("MolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KayitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MolaBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MolaBitis")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MolaTurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MolaId");

                    b.HasIndex("KayitId");

                    b.HasIndex("MolaTurId");

                    b.ToTable("Molalars");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Raporlar", b =>
                {
                    b.Property<Guid>("RaporId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("RaporAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("ToplamCalismaSuresi")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("ToplamMolaSuresi")
                        .HasColumnType("time");

                    b.HasKey("RaporId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Raporlars");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppRoleClaim", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.KullaniciTurleri", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserClaim", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserLogin", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserRole", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.KullaniciTurleri", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YuzTanimaTakip.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.AppUserToken", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.CalisanKayitlari", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", "Kullanici")
                        .WithMany("CalisanKayitlaris")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.GecmisKayitlar", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", "Kullanici")
                        .WithMany("GecmisKayitlars")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Kullanici", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.KullaniciTurleri", "KullaniciTur")
                        .WithMany()
                        .HasForeignKey("KullaniciTurId");

                    b.Navigation("KullaniciTur");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.MesaiSaatleri", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Molalar", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.CalisanKayitlari", "Kayit")
                        .WithMany("Molalars")
                        .HasForeignKey("KayitId");

                    b.HasOne("YuzTanimaTakip.Models.MolaTurleri", "MolaTur")
                        .WithMany("Molalars")
                        .HasForeignKey("MolaTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kayit");

                    b.Navigation("MolaTur");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Raporlar", b =>
                {
                    b.HasOne("YuzTanimaTakip.Models.Kullanici", "Kullanici")
                        .WithMany("Raporlars")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.CalisanKayitlari", b =>
                {
                    b.Navigation("Molalars");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.Kullanici", b =>
                {
                    b.Navigation("CalisanKayitlaris");

                    b.Navigation("GecmisKayitlars");

                    b.Navigation("Raporlars");
                });

            modelBuilder.Entity("YuzTanimaTakip.Models.MolaTurleri", b =>
                {
                    b.Navigation("Molalars");
                });
#pragma warning restore 612, 618
        }
    }
}
